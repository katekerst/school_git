как выглядит принтф 
на вход приходят аргументы различных форматов считываются они через библиотеку стдчто-то там
далее я считываю из первой строки принтфа тип выводимого параметра
вывожу числа-строки

возникающие вопросы 
1) Реализация флоатов
2) куча флагов
3) Отсутствие Кати
4) Дальний и ближний указатель
5) Чуть ниже указателей не могу понять что за вывод

**) http://www.codenet.ru/progr/cpp/spr/328.php часть информации брал отсюда
**) http://it.kgsu.ru/C++/c0008.html  разбирается много частных вариантов использования принтфа

%[флаги][ширина][точность][модификаторы][тип преобразования]

типы преобразования:

ЧИСЛЕННЫЕ

d - десятичное со знаком
i   десятичное со знаком
o   восьмиричное
u   десятичное без знака
x   шестнадцетеричное без знака
X   шестнадцетеричное без знака (БОЛЬШИМИ БУКВАМИ)
f   Долбанный флоат в виде ddd.dddd
e   Такой же мудаковатый флоат только в виде d.ddd * e[+/-]ddd
g   либо ф либо е только с заданным кол-вом знаков после точки
E   то же самое что и е только с буквой "Е" для обозначения степени
G   то же самое что и g только с буквой "Е" для обозначения степени

СИВОЛЬНЫЕ

c   один символ
s   выводит строку пока не увидит конец строки либо не достигнет "точности"
%   печатается только %

УКАЗАТЕЛИ

n   сохраняется (по адресу, указанному во входном аргументе) кол-во только что записанных символов.
P   Печатает входной аргумент как указатель (нихеро не понял.)

СИМВОЛЫ Флаги

-   Левое выравнивание результата, пробелы остаются справа.
    Если не задан, результат выравнивается справа, заполняется пробелами или нулями слева.
+   Знаковое преобразование. Результат всегда будет начинаться с "+" или "-" Плюс имеет приоритет над пробелом
(тип пробел)    Если значение неотрицательно, вывод начинается с пробела вместо плюса. Отрицателные значения всегда начинаются с минуса

#   Намекает на "альтернативность" формы флага. 

хештег вместе с флагами выдает другой результат

c, s, d, i, u        на них хештег не действует
0  -                "0" предшествует ненулевому arg
x, X                0x (или 0X) предшествует arg
e, E или f          Результат всегда будет содержать десятичную точку, даже если за точкой не следует никаких цифр. Обычно, десятичная точка появляется в результате, только если за ней следует цифра.
g or G              Хвостовые нули не удаляются

СПЕЦИФИКАЦИЯ ШИРИНЫ

Раздел о выравнивании
ширина задается двумя способами:
- С помощью строки десятичных цифр
- С помощью знаков (*)

Как это влияет на ширину вывода
n   -   Печатаются по крайней мере n символов. Если выводимое значение меньше чем n, происходит выравнивание. Выравнивание справа если задан флаг "-",  в противном случае - левое выравнивание.
0n  -   Печатает по крайней мере n символов. Если печатаем меньше чем n слева все заполняется нулями.
*   -   Спецификация ширины ставится в списке аргументов перед существующим аргументом.

СПЕЦИФИКАЦИЯ точности

                    Спецификация точности всегда  начинается  с  точки
                   (.),  отделяющей ее от предшествующей спецификации
                   ширины.  Затем спецификация точности также,  как и
                   ширины,  задается либо непосредственно,  с помощью
                   строки десятичных цифр,  либо косвенно - с помощью
                   знака   звездочки   (*).   Если  для  спецификации
                   точности  используется  звездочка  (*),  следующий
                   аргумент  в  вызове  функции  (обязательно  целый)
                   определяет точность.

                   Если вы используете звездочки для задания точности
                   или ширины,  или для обеих спецификаций,  аргумент
                   должен      следовать      непосредственно      за
                   соответствующим спецификатором.

виды спецификаций

(не задана) -  Точность устанавливается по умолчанию. 
                (Для d, i, o, u, x, X)  =1 
                (Для типов e, E, f)     =6  
                все значащие цифры для g, G;
                До первого нулевого символя для "S"; 
                Типа "С" это не касается
.0          -   Для d, i, o, u, x, X установлена по умолчанию
.n          -   Печатаются n символов или n десятичных знаков; если выводимое значение содержит больше n символов, оно может быть усечено или округлено. (Случится это или нет, зависит от символьного типа)
*           -   Спецификация точности задается в списке аргументов, причем она предшествует значению форматируемого аргумента.


 Замечание. Если   указана   нулевая   точность,  и
                   спецификатор формата для целого значения (т.е.  d,
                   i,  o,  u, x), и печатаемое значение равно 0, то в
                   этом случае не будут  выводится  цифровые  символы
                   (т.е. поле будет пустое).

ВЛИЯНИЕ СПЕЦИФИКАЦИИ ТОЧНОСТИ НА преобразование

diouxX      (это обозначение всех целочисленных флагов) .n выводит >= n цифр. Если аргумент < n слева всё дозабью нулями
            Ну а если аргумент больше то ничего урезаться не будет.
eEf         .n печатает n символов после точки и последний округляет в большую сторону.
gG          .n будет напечатано максимум n значащих цифр
с           На чар никак не влияет
s           Либо печатает до n символов из строки либо до конца строки.

МОДИФИКАТОР ВХОДНОГО РАЗМЕРА

 Символ - модификатор входного размера (F,  N, h, l или   L)   дает   размер   последующего   входного аргумента:
F   =   Дальний указатель ?????????????? НУЖНО ЛИ РЕАЛИЗОВЫВАТЬ ДАЛЬНИЙ И БЛИЖНИЙ УКАЗАТЕЛЬ????????????????
N   =   ближний указатель
h   =   короткое число  ????? ДА ТУТ ВООБЩЕ ЕРЕСЬ И Я НЕ МОГУ НИЧЕГО ПОНЯТЬ???????????
l   =   длинное целое
L   =   длинное двойной точности






